#pragma checksum "C:\Users\Ghaster\IdeaProjects\UBB-SE-2025-MarketMinds-Steam\SteamProfile\Views\AdaptiveProfileControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "5BF2C3C80CAA5929F75509B2FFBBE08213852B303BBF44F88A64F11421C693B9"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamProfile.Views
{
    partial class AdaptiveProfileControl : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Width(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Height(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AdaptiveProfileControl_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAdaptiveProfileControl_Bindings
        {
            private global::SteamProfile.Views.AdaptiveProfileControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Shapes.Ellipse obj11;
            private global::Microsoft.UI.Xaml.Controls.Image obj12;
            private global::Microsoft.UI.Xaml.Controls.Image obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj11WidthDisabled = false;
            private static bool isobj11HeightDisabled = false;
            private static bool isobj12WidthDisabled = false;
            private static bool isobj12HeightDisabled = false;
            private static bool isobj13WidthDisabled = false;
            private static bool isobj13HeightDisabled = false;

            private AdaptiveProfileControl_obj1_BindingsTracking bindingsTracking;

            public AdaptiveProfileControl_obj1_Bindings()
            {
                this.bindingsTracking = new AdaptiveProfileControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 39 && columnNumber == 29)
                {
                    isobj11WidthDisabled = true;
                }
                else if (lineNumber == 40 && columnNumber == 29)
                {
                    isobj11HeightDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 28)
                {
                    isobj12WidthDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 28)
                {
                    isobj12HeightDisabled = true;
                }
                else if (lineNumber == 58 && columnNumber == 28)
                {
                    isobj13WidthDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 28)
                {
                    isobj13HeightDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // Views\AdaptiveProfileControl.xaml line 38
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                        break;
                    case 12: // Views\AdaptiveProfileControl.xaml line 48
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 13: // Views\AdaptiveProfileControl.xaml line 57
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAdaptiveProfileControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::SteamProfile.Views.AdaptiveProfileControl>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SteamProfile.Views.AdaptiveProfileControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProfilePictureSize(obj.ProfilePictureSize, phase);
                        this.Update_HatSize(obj.HatSize, phase);
                        this.Update_PetSize(obj.PetSize, phase);
                    }
                }
            }
            private void Update_ProfilePictureSize(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdaptiveProfileControl.xaml line 38
                    if (!isobj11WidthDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Width(this.obj11, obj);
                    }
                    // Views\AdaptiveProfileControl.xaml line 38
                    if (!isobj11HeightDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Height(this.obj11, obj);
                    }
                }
            }
            private void Update_HatSize(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdaptiveProfileControl.xaml line 48
                    if (!isobj12WidthDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Width(this.obj12, obj);
                    }
                    // Views\AdaptiveProfileControl.xaml line 48
                    if (!isobj12HeightDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Height(this.obj12, obj);
                    }
                }
            }
            private void Update_PetSize(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdaptiveProfileControl.xaml line 57
                    if (!isobj13WidthDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Width(this.obj13, obj);
                    }
                    // Views\AdaptiveProfileControl.xaml line 57
                    if (!isobj13HeightDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Height(this.obj13, obj);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AdaptiveProfileControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<AdaptiveProfileControl_obj1_Bindings> weakRefToBindingObj; 

                public AdaptiveProfileControl_obj1_BindingsTracking(AdaptiveProfileControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AdaptiveProfileControl_obj1_Bindings>(obj);
                }

                public AdaptiveProfileControl_obj1_Bindings TryGetBindingObject()
                {
                    AdaptiveProfileControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void DependencyPropertyChanged_ProfilePictureSize(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    AdaptiveProfileControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::SteamProfile.Views.AdaptiveProfileControl obj = sender as global::SteamProfile.Views.AdaptiveProfileControl;
                        if (obj != null)
                        {
                            bindings.Update_ProfilePictureSize(obj.ProfilePictureSize, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_HatSize(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    AdaptiveProfileControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::SteamProfile.Views.AdaptiveProfileControl obj = sender as global::SteamProfile.Views.AdaptiveProfileControl;
                        if (obj != null)
                        {
                            bindings.Update_HatSize(obj.HatSize, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_PetSize(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    AdaptiveProfileControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::SteamProfile.Views.AdaptiveProfileControl obj = sender as global::SteamProfile.Views.AdaptiveProfileControl;
                        if (obj != null)
                        {
                            bindings.Update_PetSize(obj.PetSize, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ProfilePictureSize = 0;
                private long tokenDPC_HatSize = 0;
                private long tokenDPC_PetSize = 0;
                public void UpdateChildListeners_(global::SteamProfile.Views.AdaptiveProfileControl obj)
                {
                    AdaptiveProfileControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::SteamProfile.Views.AdaptiveProfileControl.ProfilePictureSizeProperty, tokenDPC_ProfilePictureSize);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::SteamProfile.Views.AdaptiveProfileControl.HatSizeProperty, tokenDPC_HatSize);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::SteamProfile.Views.AdaptiveProfileControl.PetSizeProperty, tokenDPC_PetSize);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ProfilePictureSize = obj.RegisterPropertyChangedCallback(global::SteamProfile.Views.AdaptiveProfileControl.ProfilePictureSizeProperty, DependencyPropertyChanged_ProfilePictureSize);
                            tokenDPC_HatSize = obj.RegisterPropertyChangedCallback(global::SteamProfile.Views.AdaptiveProfileControl.HatSizeProperty, DependencyPropertyChanged_HatSize);
                            tokenDPC_PetSize = obj.RegisterPropertyChangedCallback(global::SteamProfile.Views.AdaptiveProfileControl.PetSizeProperty, DependencyPropertyChanged_PetSize);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\AdaptiveProfileControl.xaml line 10
                {
                    this.RootGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Views\AdaptiveProfileControl.xaml line 12
                {
                    this.BackgroundImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 4: // Views\AdaptiveProfileControl.xaml line 24
                {
                    this.ProfileSection = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 5: // Views\AdaptiveProfileControl.xaml line 68
                {
                    this.InfoSection = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 6: // Views\AdaptiveProfileControl.xaml line 87
                {
                    this.DescriptionTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 7: // Views\AdaptiveProfileControl.xaml line 77
                {
                    this.UsernameTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 8: // Views\AdaptiveProfileControl.xaml line 80
                {
                    this.EmojiImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 9: // Views\AdaptiveProfileControl.xaml line 30
                {
                    this.FrameImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 10: // Views\AdaptiveProfileControl.xaml line 36
                {
                    this.ProfilePictureContainer = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 11: // Views\AdaptiveProfileControl.xaml line 38
                {
                    this.ProfilePictureEllipse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                }
                break;
            case 12: // Views\AdaptiveProfileControl.xaml line 48
                {
                    this.HatImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 13: // Views\AdaptiveProfileControl.xaml line 57
                {
                    this.PetImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 14: // Views\AdaptiveProfileControl.xaml line 42
                {
                    this.ProfilePictureBrush = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Media.ImageBrush>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\AdaptiveProfileControl.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    AdaptiveProfileControl_obj1_Bindings bindings = new AdaptiveProfileControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

