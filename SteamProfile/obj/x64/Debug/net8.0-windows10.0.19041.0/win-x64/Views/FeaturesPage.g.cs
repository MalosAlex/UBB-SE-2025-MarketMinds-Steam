#pragma checksum "C:\Users\Bianca\Desktop\ISS\UBB-SE-2025-Spice\SteamProfile\Views\FeaturesPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "77FC194BD7674C5324CAF8CD4DCA404EA7919F50B28DF64CB7174B79920FD725"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamProfile.Views
{
    partial class FeaturesPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Foreground(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class FeaturesPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IFeaturesPage_Bindings
        {
            private global::SteamProfile.Views.FeaturesPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj2;
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj3;
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj4;
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj5;
            private global::Microsoft.UI.Xaml.Controls.ItemsControl obj6;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2ItemsSourceDisabled = false;
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj5ItemsSourceDisabled = false;
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj7ForegroundDisabled = false;

            private FeaturesPage_obj1_BindingsTracking bindingsTracking;

            public FeaturesPage_obj1_Bindings()
            {
                this.bindingsTracking = new FeaturesPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 56 && columnNumber == 27)
                {
                    isobj2ItemsSourceDisabled = true;
                }
                else if (lineNumber == 99 && columnNumber == 27)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 142 && columnNumber == 27)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 185 && columnNumber == 27)
                {
                    isobj5ItemsSourceDisabled = true;
                }
                else if (lineNumber == 228 && columnNumber == 27)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 268 && columnNumber == 24)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 269 && columnNumber == 23)
                {
                    isobj7ForegroundDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\FeaturesPage.xaml line 56
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                        break;
                    case 3: // Views\FeaturesPage.xaml line 99
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                        break;
                    case 4: // Views\FeaturesPage.xaml line 142
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                        break;
                    case 5: // Views\FeaturesPage.xaml line 185
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                        break;
                    case 6: // Views\FeaturesPage.xaml line 228
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                        break;
                    case 7: // Views\FeaturesPage.xaml line 268
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IFeaturesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::SteamProfile.Views.FeaturesPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SteamProfile.Views.FeaturesPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__viewModel(obj._viewModel, phase);
                    }
                }
            }
            private void Update__viewModel(global::SteamProfile.ViewModels.FeaturesViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__viewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__viewModel_Frames(obj.Frames, phase);
                        this.Update__viewModel_Emojis(obj.Emojis, phase);
                        this.Update__viewModel_Backgrounds(obj.Backgrounds, phase);
                        this.Update__viewModel_Pets(obj.Pets, phase);
                        this.Update__viewModel_Hats(obj.Hats, phase);
                        this.Update__viewModel_StatusMessage(obj.StatusMessage, phase);
                        this.Update__viewModel_StatusColor(obj.StatusColor, phase);
                    }
                }
            }
            private void Update__viewModel_Frames(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__viewModel_Frames(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 56
                    if (!isobj2ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj2, obj, null);
                    }
                }
            }
            private void Update__viewModel_Emojis(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__viewModel_Emojis(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 99
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update__viewModel_Backgrounds(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__viewModel_Backgrounds(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 142
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update__viewModel_Pets(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__viewModel_Pets(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 185
                    if (!isobj5ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                    }
                }
            }
            private void Update__viewModel_Hats(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__viewModel_Hats(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 228
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update__viewModel_StatusMessage(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 268
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update__viewModel_StatusColor(global::Microsoft.UI.Xaml.Media.Brush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FeaturesPage.xaml line 268
                    if (!isobj7ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Foreground(this.obj7, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class FeaturesPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<FeaturesPage_obj1_Bindings> weakRefToBindingObj; 

                public FeaturesPage_obj1_BindingsTracking(FeaturesPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<FeaturesPage_obj1_Bindings>(obj);
                }

                public FeaturesPage_obj1_Bindings TryGetBindingObject()
                {
                    FeaturesPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners__viewModel(null);
                    UpdateChildListeners__viewModel_Frames(null);
                    UpdateChildListeners__viewModel_Emojis(null);
                    UpdateChildListeners__viewModel_Backgrounds(null);
                    UpdateChildListeners__viewModel_Pets(null);
                    UpdateChildListeners__viewModel_Hats(null);
                }

                public void PropertyChanged__viewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::SteamProfile.ViewModels.FeaturesViewModel obj = sender as global::SteamProfile.ViewModels.FeaturesViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__viewModel_Frames(obj.Frames, DATA_CHANGED);
                                bindings.Update__viewModel_Emojis(obj.Emojis, DATA_CHANGED);
                                bindings.Update__viewModel_Backgrounds(obj.Backgrounds, DATA_CHANGED);
                                bindings.Update__viewModel_Pets(obj.Pets, DATA_CHANGED);
                                bindings.Update__viewModel_Hats(obj.Hats, DATA_CHANGED);
                                bindings.Update__viewModel_StatusMessage(obj.StatusMessage, DATA_CHANGED);
                                bindings.Update__viewModel_StatusColor(obj.StatusColor, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Frames":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_Frames(obj.Frames, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Emojis":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_Emojis(obj.Emojis, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Backgrounds":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_Backgrounds(obj.Backgrounds, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Pets":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_Pets(obj.Pets, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Hats":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_Hats(obj.Hats, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StatusMessage":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_StatusMessage(obj.StatusMessage, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StatusColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__viewModel_StatusColor(obj.StatusColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::SteamProfile.ViewModels.FeaturesViewModel cache__viewModel = null;
                public void UpdateChildListeners__viewModel(global::SteamProfile.ViewModels.FeaturesViewModel obj)
                {
                    if (obj != cache__viewModel)
                    {
                        if (cache__viewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__viewModel).PropertyChanged -= PropertyChanged__viewModel;
                            cache__viewModel = null;
                        }
                        if (obj != null)
                        {
                            cache__viewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__viewModel;
                        }
                    }
                }
                public void PropertyChanged__viewModel_Frames(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__viewModel_Frames(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> cache__viewModel_Frames = null;
                public void UpdateChildListeners__viewModel_Frames(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj)
                {
                    if (obj != cache__viewModel_Frames)
                    {
                        if (cache__viewModel_Frames != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__viewModel_Frames).PropertyChanged -= PropertyChanged__viewModel_Frames;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__viewModel_Frames).CollectionChanged -= CollectionChanged__viewModel_Frames;
                            cache__viewModel_Frames = null;
                        }
                        if (obj != null)
                        {
                            cache__viewModel_Frames = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__viewModel_Frames;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__viewModel_Frames;
                        }
                    }
                }
                public void PropertyChanged__viewModel_Emojis(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__viewModel_Emojis(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> cache__viewModel_Emojis = null;
                public void UpdateChildListeners__viewModel_Emojis(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj)
                {
                    if (obj != cache__viewModel_Emojis)
                    {
                        if (cache__viewModel_Emojis != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__viewModel_Emojis).PropertyChanged -= PropertyChanged__viewModel_Emojis;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__viewModel_Emojis).CollectionChanged -= CollectionChanged__viewModel_Emojis;
                            cache__viewModel_Emojis = null;
                        }
                        if (obj != null)
                        {
                            cache__viewModel_Emojis = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__viewModel_Emojis;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__viewModel_Emojis;
                        }
                    }
                }
                public void PropertyChanged__viewModel_Backgrounds(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__viewModel_Backgrounds(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> cache__viewModel_Backgrounds = null;
                public void UpdateChildListeners__viewModel_Backgrounds(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj)
                {
                    if (obj != cache__viewModel_Backgrounds)
                    {
                        if (cache__viewModel_Backgrounds != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__viewModel_Backgrounds).PropertyChanged -= PropertyChanged__viewModel_Backgrounds;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__viewModel_Backgrounds).CollectionChanged -= CollectionChanged__viewModel_Backgrounds;
                            cache__viewModel_Backgrounds = null;
                        }
                        if (obj != null)
                        {
                            cache__viewModel_Backgrounds = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__viewModel_Backgrounds;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__viewModel_Backgrounds;
                        }
                    }
                }
                public void PropertyChanged__viewModel_Pets(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__viewModel_Pets(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> cache__viewModel_Pets = null;
                public void UpdateChildListeners__viewModel_Pets(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj)
                {
                    if (obj != cache__viewModel_Pets)
                    {
                        if (cache__viewModel_Pets != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__viewModel_Pets).PropertyChanged -= PropertyChanged__viewModel_Pets;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__viewModel_Pets).CollectionChanged -= CollectionChanged__viewModel_Pets;
                            cache__viewModel_Pets = null;
                        }
                        if (obj != null)
                        {
                            cache__viewModel_Pets = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__viewModel_Pets;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__viewModel_Pets;
                        }
                    }
                }
                public void PropertyChanged__viewModel_Hats(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__viewModel_Hats(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FeaturesPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> cache__viewModel_Hats = null;
                public void UpdateChildListeners__viewModel_Hats(global::System.Collections.ObjectModel.ObservableCollection<global::SteamProfile.ViewModels.FeatureDisplay> obj)
                {
                    if (obj != cache__viewModel_Hats)
                    {
                        if (cache__viewModel_Hats != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__viewModel_Hats).PropertyChanged -= PropertyChanged__viewModel_Hats;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__viewModel_Hats).CollectionChanged -= CollectionChanged__viewModel_Hats;
                            cache__viewModel_Hats = null;
                        }
                        if (obj != null)
                        {
                            cache__viewModel_Hats = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__viewModel_Hats;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__viewModel_Hats;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 8: // Views\FeaturesPage.xaml line 236
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element8).Tapped += this.Grid_Tapped;
                }
                break;
            case 9: // Views\FeaturesPage.xaml line 240
                {
                    global::Microsoft.UI.Xaml.Controls.Image element9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Image)element9).ImageFailed += this.Image_ImageFailed;
                }
                break;
            case 10: // Views\FeaturesPage.xaml line 193
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element10).Tapped += this.Grid_Tapped;
                }
                break;
            case 11: // Views\FeaturesPage.xaml line 197
                {
                    global::Microsoft.UI.Xaml.Controls.Image element11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Image)element11).ImageFailed += this.Image_ImageFailed;
                }
                break;
            case 12: // Views\FeaturesPage.xaml line 150
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element12).Tapped += this.Grid_Tapped;
                }
                break;
            case 13: // Views\FeaturesPage.xaml line 154
                {
                    global::Microsoft.UI.Xaml.Controls.Image element13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Image)element13).ImageFailed += this.Image_ImageFailed;
                }
                break;
            case 14: // Views\FeaturesPage.xaml line 107
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element14).Tapped += this.Grid_Tapped;
                }
                break;
            case 15: // Views\FeaturesPage.xaml line 111
                {
                    global::Microsoft.UI.Xaml.Controls.Image element15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Image)element15).ImageFailed += this.Image_ImageFailed;
                }
                break;
            case 16: // Views\FeaturesPage.xaml line 64
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element16).Tapped += this.Grid_Tapped;
                }
                break;
            case 17: // Views\FeaturesPage.xaml line 68
                {
                    global::Microsoft.UI.Xaml.Controls.Image element17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Image)element17).ImageFailed += this.Image_ImageFailed;
                }
                break;
            case 18: // Views\FeaturesPage.xaml line 40
                {
                    global::Microsoft.UI.Xaml.Controls.Button element18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element18).Click += this.BackToProfileButton_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2312")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\FeaturesPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    FeaturesPage_obj1_Bindings bindings = new FeaturesPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

